Resources:
    EC2Instance:
        Type: 'AWS::EC2::Instance'
        Properties:
        InstanceType: t2.micro
        SecurityGroups:
            - !Ref InstanceSecurityGroup
        KeyName: group6-project
        ImageId: ami-0a313d6098716f372 
        UserData: !Base64 |
        #!/bin/bash
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates
        sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
        sudo echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" | tee /etc/apt/sources.list.d/docker.list
        sudo apt-get update
        sudo apt-get purge lxc-docker || true
        sudo apt-get -y install linux-image-extra-$(uname -r) linux-image-extra-virtual
        sudo apt-get -y install docker-engine
        sudo usermod -aG docker ubuntu
        sudo mkdir -p /etc/systemd/system/docker.service.d
        sudo printf "[Service]\nExecStart=\nExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375\n" >>  /etc/systemd/system/docker.service.d/docker.conf
        sudo systemctl daemon-reload
        sudo systemctl restart docker

    InstanceSecurityGroup:
        Type: 'AWS::EC2::SecurityGroup'
        Properties:
        GroupDescription: Enable SSH,HTTP,DOCKER
        SecurityGroupIngress:
           - IpProtocol: tcp
            FromPort: '80'
            ToPort: '80'
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: '22'
            ToPort: '22'
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: '2375'
            ToPort: '2375'
            CidrIp: 0.0.0.0/0
    
    DatabaseInstance:
        Type: 'AWS::RDS::DBInstance'
        Properties:
        DBName: "group6db"
        AllocatedStorage: '5'
        DBInstanceClass: db.t2.micro
        Engine: MySQL
        MasterUsername: group6user
        MasterUserPassword: group6password
        DBSecurityGroups: !Ref RSDSecurityGroup

    RSDSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      GroupDescription: Security Group for RDS public access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
